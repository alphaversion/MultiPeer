{"Typealiases.html#/s:9MultiPeer8MCPeerIDa":{"name":"MCPeerID","abstract":"<p>MultiPeerDelegate</p>"},"Protocols/MultiPeerDelegate.html#/s:9MultiPeer0aB8DelegateP05multiB014didReceiveData6ofType4fromy10Foundation0G0V_s6UInt32VSo8MCPeerIDCtF":{"name":"multiPeer(didReceiveData:ofType:from:)","abstract":"<p>didReceiveData: delegate runs on receiving data from another peer</p>","parent_name":"MultiPeerDelegate"},"Protocols/MultiPeerDelegate.html#/s:9MultiPeer0aB8DelegateP05multiB023connectedDevicesChangedySaySSG_tF":{"name":"multiPeer(connectedDevicesChanged:)","abstract":"<p>connectedDevicesChanged: delegate runs on connection/disconnection event in session</p>","parent_name":"MultiPeerDelegate"},"Protocols/MultiPeerDelegate.html":{"name":"MultiPeerDelegate","abstract":"<p>Undocumented</p>"},"Extensions/Data.html#/s:10Foundation4DataV9MultiPeerE7convertypyF":{"name":"convert()","abstract":"<p>Unarchive data into an object and return as type <code>Any</code>.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV9MultiPeerE02toB06objectACyp_tFZ":{"name":"toData(object:)","abstract":"<p>Converts an object into Data using NSKeyedArchiver</p>","parent_name":"Data"},"Extensions/Data.html":{"name":"Data"},"Classes/MultiPeer.html#/s:9MultiPeerAAC8instanceABvpZ":{"name":"instance","abstract":"<p>Singleton instance - call via MultiPeer.instance</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC8delegateAA0aB8Delegate_pSgvp":{"name":"delegate","abstract":"<p>Conforms to MultiPeerDelegate: Handles receiving data and changes in connections</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC17connectionTimeoutSdvp":{"name":"connectionTimeout","abstract":"<p>Amount of time to spend connecting before timeout</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC14availablePeersSayAA0B0CGvp":{"name":"availablePeers","abstract":"<p>Peers available to connect to</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC14connectedPeersSayAA0B0CGvp":{"name":"connectedPeers","abstract":"<p>Peers connected to</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC20connectedDeviceNamesSaySSGvp":{"name":"connectedDeviceNames","abstract":"<p>Names of all connected devices</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC9debugModeSbvp":{"name":"debugMode","abstract":"<p>Prints out all errors and status updates</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC10initialize11serviceTypeySS_tF":{"name":"initialize(serviceType:)","abstract":"<p>Initializes the MultiPeer service with a serviceType and the default deviceName</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC10initialize11serviceType10deviceNameySS_SStF":{"name":"initialize(serviceType:deviceName:)","abstract":"<p>Initializes the MultiPeer service with a serviceType and a custom deviceName</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC13startInvitingyyF":{"name":"startInviting()","abstract":"<p>HOST: Automatically browses and invites all found devices</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC14startAcceptingyyF":{"name":"startAccepting()","abstract":"<p>JOIN: Automatically advertises and accepts all invites</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC11autoConnectyyF":{"name":"autoConnect()","abstract":"<p>HOST and JOIN: Uses both advertising and browsing to connect.</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC12stopInvitingyyF":{"name":"stopInviting()","abstract":"<p>Stops the invitation process</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC13stopAcceptingyyF":{"name":"stopAccepting()","abstract":"<p>Stops accepting invites and becomes invisible on the network</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC13stopSearchingyyF":{"name":"stopSearching()","abstract":"<p>Stops all invite/accept services</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC10disconnectyyF":{"name":"disconnect()","abstract":"<p>Disconnects from the current session and stops all searching activity</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC3endyyF":{"name":"end()","abstract":"<p>Stops all invite/accept services, disconnects from the current session, and stops all searching activity</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC11isConnectedSbvp":{"name":"isConnected","abstract":"<p>Returns true if there are any connected peers</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC4send6object4typeyyp_s6UInt32VtF":{"name":"send(object:type:)","abstract":"<p>Sends an object (and type) to all connected peers.</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/s:9MultiPeerAAC4send4data4typey10Foundation4DataV_s6UInt32VtF":{"name":"send(data:type:)","abstract":"<p>Sends Data (and type) to all connected peers.</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/c:@CM@MultiPeer@objc(cs)MultiPeer(im)advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:":{"name":"advertiser(_:didReceiveInvitationFromPeer:withContext:invitationHandler:)","abstract":"<p>Received invitation</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/c:@CM@MultiPeer@objc(cs)MultiPeer(im)advertiser:didNotStartAdvertisingPeer:":{"name":"advertiser(_:didNotStartAdvertisingPeer:)","abstract":"<p>Error, could not start advertising</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/c:@CM@MultiPeer@objc(cs)MultiPeer(im)browser:foundPeer:withDiscoveryInfo:":{"name":"browser(_:foundPeer:withDiscoveryInfo:)","abstract":"<p>Found a peer, update the list of available peers</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/c:@CM@MultiPeer@objc(cs)MultiPeer(im)browser:lostPeer:":{"name":"browser(_:lostPeer:)","abstract":"<p>Lost a peer, update the list of available peers</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/c:@CM@MultiPeer@objc(cs)MultiPeer(im)browser:didNotStartBrowsingForPeers:":{"name":"browser(_:didNotStartBrowsingForPeers:)","abstract":"<p>Error, could not start browsing</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/c:@CM@MultiPeer@objc(cs)MultiPeer(im)session:peer:didChangeState:":{"name":"session(_:peer:didChange:)","abstract":"<p>Peer changed state, update all connected peers and send new connection list to delegate connectedDevicesChanged</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/c:@CM@MultiPeer@objc(cs)MultiPeer(im)session:didReceiveData:fromPeer:":{"name":"session(_:didReceive:fromPeer:)","abstract":"<p>Received data, update delegate didRecieveData</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/c:@CM@MultiPeer@objc(cs)MultiPeer(im)session:didReceiveStream:withName:fromPeer:":{"name":"session(_:didReceive:withName:fromPeer:)","abstract":"<p>Received stream</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/c:@CM@MultiPeer@objc(cs)MultiPeer(im)session:didStartReceivingResourceWithName:fromPeer:withProgress:":{"name":"session(_:didStartReceivingResourceWithName:fromPeer:with:)","abstract":"<p>Started receiving resource</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html#/c:@CM@MultiPeer@objc(cs)MultiPeer(im)session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:":{"name":"session(_:didFinishReceivingResourceWithName:fromPeer:at:withError:)","abstract":"<p>Finished receiving resource</p>","parent_name":"MultiPeer"},"Classes/MultiPeer.html":{"name":"MultiPeer","abstract":"<p>Main Class for MultiPeer</p>"},"Classes.html#/s:9MultiPeer0B0C":{"name":"Peer","abstract":"<p>Class containing peerID and session state</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}